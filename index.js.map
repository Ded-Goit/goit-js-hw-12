{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// Import the axios library to make HTTP requests\nimport axios from 'axios';\n// Declare an asynchronous function to retrieve images by query\nconst API_KEY = '49617866-877f488ac6d2fa69158bf0643';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function getImagesByQuery(query) {\n  const response = await axios.get(BASE_URL, {\n    params: {\n      key: API_KEY, // Pass our API key\n      q: query, // Search query entered by the user\n      image_type: 'photo', // Image type: photo\n      orientation: 'horizontal', // Image orientation: horizontal\n      safesearch: true, // Enable safe search\n    },\n  });\n  // Return an array of images from the API response\n  return response.data.hits;\n}\n","// Get a reference to the gallery container from the DOM\nconst gallery = document.querySelector('.gallery');\n// Function to create and display image gallery\nexport function createGallery(images) {\n  // Generate HTML markup for each image\n  const markup = images\n    .map(\n      ({\n        webformatURL, // Image URL for preview\n        largeImageURL, // Large image URL for modal\n        tags, // Image description (alternative text)\n        likes, // Number of likes\n        views, // Number of views\n        comments, // Number of comments\n        downloads, // Number of downloads\n      }) => `\n    <li class=\"gallery-item\">\n      <a href=\"${largeImageURL}\">\n        <img src=\"${webformatURL}\" alt=\"${tags}\" />\n      </a>\n      <div class=\"info\">\n        <p><b>Likes:</b> ${likes}</p>\n        <p><b>Views:</b> ${views}</p>\n        <p><b>Comments:</b> ${comments}</p>\n        <p><b>Downloads:</b> ${downloads}</p>\n      </div>\n    </li>\n  `\n    )\n    .join('');\n  // Add the generated markup to the gallery container\n  gallery.innerHTML = markup;\n  /*lightbox.refresh(); // Update the SimpleLightbox instance for new gallery items*/\n}\n// Function to clear the gallery\nexport function clearGallery() {\n  gallery.innerHTML = '';\n}\n// Function to show the loading indicator\nexport function showLoader() {\n  /*console.log(' show Loader');*/\n  document.querySelector('.loader').classList.remove('hidden');\n}\n// Function to hide the loading indicator\nexport function hideLoader() {\n  /*console.log(' hide Loader');*/\n  document.querySelector('.loader').classList.add('hidden');\n}\n","// Import the library for displaying notifications\nimport iziToast from 'izitoast';\n// Import styles for iziToast\nimport 'izitoast/dist/css/iziToast.min.css';\n// Import the SimpleLightbox library to create a modal image window\nimport SimpleLightbox from 'simplelightbox';\n// Import the styles for SimpleLightbox\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n// Import the necessary modules and functions\nimport { getImagesByQuery } from './js/pixabay-api';\nimport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n} from './js/render-functions';\n// Create an instance of SimpleLightbox for the gallery items\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionSelector: 'img',\n  captionsData: 'alt',\n  captionPosition: 'bottom',\n  captionDelay: 250,\n});\n// Get a link to the search form from the DOM\nconst form = document.querySelector('.form');\n// Add an event handler for the form on the 'submit' event\nform.addEventListener('submit', async event => {\n  event.preventDefault(); // Prevent the default form behavior (page reload)\n  // Get the search query value and remove extra spaces\n  const query = event.target.elements['search-text'].value.trim();\n  if (!query) {\n    // If the search field is empty, display an error message\n    iziToast.error({ message: 'Please enter a search term!' });\n    return;\n  }\n\n  clearGallery(); // Clear previous search results\n  showLoader(); // Display the loading indicator\n  // Make a GET request to Pixabay API with the required parameters\n  try {\n    const images = await getImagesByQuery(query); // Search for images based on the entered query\n\n    if (images.length === 0) {\n      // If no images are found, display a warning\n      iziToast.warning({\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n      });\n    } else {\n      // If the image is found, create a gallery\n      createGallery(images);\n      lightbox.refresh();\n    } // In case of an error, display it using the iziToast library\n  } catch (error) {\n    // In case of an error, display an error message\n    iziToast.error({\n      message: 'Something went wrong. Please try again later.',\n    });\n  } finally {\n    hideLoader(); // Hide the loading indicator regardless of the result\n    event.target.reset(); //clear the input field\n  }\n});\n"],"names":["API_KEY","BASE_URL","getImagesByQuery","query","axios","gallery","createGallery","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","hideLoader","lightbox","SimpleLightbox","form","event","iziToast"],"mappings":"owBAGA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAiBC,EAAO,CAW5C,OAViB,MAAMC,EAAM,IAAIH,EAAU,CACzC,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACL,CAAG,GAEe,KAAK,IACvB,CCjBA,MAAME,EAAU,SAAS,cAAc,UAAU,EAE1C,SAASC,EAAcC,EAAQ,CAEpC,MAAMC,EAASD,EACZ,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA;AAAA,iBAEKL,CAAa;AAAA,oBACVD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,2BAGnBC,CAAK;AAAA,2BACLC,CAAK;AAAA,8BACFC,CAAQ;AAAA,+BACPC,CAAS;AAAA;AAAA;AAAA,GAInC,EACA,KAAK,EAAE,EAEVV,EAAQ,UAAYG,CAEtB,CAEO,SAASQ,GAAe,CAC7BX,EAAQ,UAAY,EACtB,CAEO,SAASY,GAAa,CAE3B,SAAS,cAAc,SAAS,EAAE,UAAU,OAAO,QAAQ,CAC7D,CAEO,SAASC,GAAa,CAE3B,SAAS,cAAc,SAAS,EAAE,UAAU,IAAI,QAAQ,CAC1D,CC9BA,MAAMC,EAAW,IAAIC,EAAe,aAAc,CAChD,gBAAiB,MACjB,aAAc,MACd,gBAAiB,SACjB,aAAc,GAChB,CAAC,EAEKC,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAU,MAAMC,GAAS,CAC7CA,EAAM,eAAc,EAEpB,MAAMnB,EAAQmB,EAAM,OAAO,SAAS,aAAa,EAAE,MAAM,OACzD,GAAI,CAACnB,EAAO,CAEVoB,EAAS,MAAM,CAAE,QAAS,6BAA+B,CAAA,EACzD,MACD,CAEDP,IACAC,IAEA,GAAI,CACF,MAAMV,EAAS,MAAML,EAAiBC,CAAK,EAEvCI,EAAO,SAAW,EAEpBgB,EAAS,QAAQ,CACf,QACE,0EACV,CAAO,GAGDjB,EAAcC,CAAM,EACpBY,EAAS,QAAO,EAEnB,MAAe,CAEdI,EAAS,MAAM,CACb,QAAS,+CACf,CAAK,CACL,QAAY,CACRL,IACAI,EAAM,OAAO,OACd,CACH,CAAC"}