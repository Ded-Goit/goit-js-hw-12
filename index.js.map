{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// Import the axios library to make HTTP requests\nimport axios from 'axios';\n// Declare an asynchronous function to retrieve images by query\nconst API_KEY = '49617866-877f488ac6d2fa69158bf0643'; // my unique Pixabay API access key\nconst BASE_URL = 'https://pixabay.com/api/'; // Base address for API requests\nconst PER_PAGE = 15; // Number of images to download per request (pagination)\n// Export an asynchronous function to get images by keyword and page\nexport async function getImagesByQuery(query, page = 1) {\n  // Form the query parameters as a URL search string\n  const params = new URLSearchParams({\n    key: API_KEY, // Pass our API key\n    q: query, // Search query entered by the user\n    image_type: 'photo', // Image type: photo\n    orientation: 'horizontal', // Image orientation: horizontal\n    safesearch: true, // Enable safe search\n    page: page, // Page number for pagination\n    per_page: PER_PAGE, // Number of images per page\n  });\n  // Make an HTTP request using fetch with constructed parameters\n  const response = await fetch(`${BASE_URL}?${params}`);\n  // If the response is incorrect (not a 200 status), throw an error\n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n  // Convert the response from JSON format to a JavaScript object\n  const data = await response.json();\n  // Return the received data (an object containing an array of images and a total count)\n  return data;\n}\n","// Import the SimpleLightbox library to create a modal image window\nimport SimpleLightbox from 'simplelightbox';\n// Import the styles for SimpleLightbox\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n// Get a reference to the gallery container from the DOM\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\nconst loadermore = document.querySelector('.loader-more');\n// Initialize SimpleLightbox for gallery\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionSelector: 'img', // Where to get the caption for the image\n  captionsData: 'alt', // Use the alt attribute as the caption\n  captionPosition: 'bottom', // The caption will be at the bottom of the image\n  captionDelay: 250, // Delay before displaying the caption\n});\n// Function to create and display image gallery\nexport function createGallery(images) {\n  if (!Array.isArray(images)) return;\n  // Generate HTML markup for each image\n  const markup = images\n    .map(\n      ({\n        webformatURL, // Image URL for preview\n        largeImageURL, // Large image URL for modal\n        tags, // Image description (alternative text)\n        likes, // Number of likes\n        views, // Number of views\n        comments, // Number of comments\n        downloads, // Number of downloads\n      }) => `\n    <li class=\"gallery-item\">\n      <a href=\"${largeImageURL}\" title=\"${tags}\">\n        <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n      </a>\n      <div class=\"info\">\n        <p><b>Likes:</b> ${likes}</p>\n        <p><b>Views:</b> ${views}</p>\n        <p><b>Comments:</b> ${comments}</p>\n        <p><b>Downloads:</b> ${downloads}</p>\n      </div>\n    </li>\n  `\n    )\n    .join(''); //(Lazy loading)\n  // Add the generated markup to the gallery container\n  gallery.insertAdjacentHTML('beforeend', markup); //inserts the received nodes into the DOM tree at the specified position\n  lightbox.refresh(); // Update the SimpleLightbox instance for new gallery items\n}\n// Function to clear the gallery\nexport function clearGallery() {\n  gallery.innerHTML = '';\n}\n// Function to show the loading indicator\nexport function showLoader() {\n  /*console.log(' show Loader');*/\n  loader.classList.remove('hidden');\n}\n// Function to hide the loading indicator\nexport function hideLoader() {\n  /*console.log('hide Loader');*/\n  loader.classList.add('hidden');\n}\n// Function to show the loading indicator more load\nexport function showMoreLoader() {\n  /*console.log('show more Loader');*/\n  loadermore.classList.remove('hidden');\n}\n// Function to hide the loading indicator more load\nexport function hideMoreLoader() {\n  /*console.log('hide more Loader');*/\n  loadermore.classList.add('hidden');\n}\n// Function to show the button Load More\nexport function showLoadMoreButton() {\n  document.querySelector(`.gallery-button`).classList.remove('hidden');\n}\n// Function to hide the button Load More\nexport function hideLoadMoreButton() {\n  document.querySelector(`.gallery-button`).classList.add('hidden');\n}\n","// Import the library for displaying notifications\nimport iziToast from 'izitoast';\n// Import styles for iziToast\nimport 'izitoast/dist/css/iziToast.min.css';\n// Import the function for getting images from Pixabay API\nimport { getImagesByQuery } from './js/pixabay-api';\n// Import auxiliary functions for working with the gallery and interface\nimport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n  showLoadMoreButton,\n  hideLoadMoreButton,\n  showMoreLoader,\n  hideMoreLoader,\n} from './js/render-functions';\n// Get the \"Load more\" button element from the DOM\nconst loadMoreBtn = document.querySelector('.gallery-button');\n// Get a link to the search form from the DOM\nconst form = document.querySelector('.form');\n// Global variables to save state\nlet currentQuery = ''; // saved search keyword\nlet currentPage = 1; // current page for pagination\nlet totalHits = 0; // total number of images found\n\n// Add an event handler for the form on the 'submit' event\nform.addEventListener('submit', async event => {\n  event.preventDefault(); // Prevent the default form behavior (page reload)\n  // get the search query\n  const query = event.target.elements['search-text'].value.trim();\n  if (query !== currentQuery) {\n    currentQuery = query; // update the saved query\n    currentPage = 1; // reset the page to the beginning\n    clearGallery(); // Clear previous search results\n    hideLoadMoreButton(); // hides the Load More button\n  }\n  if (!query) {\n    // If the search field is empty, display an error message\n    iziToast.error({ message: 'Please enter a search term!' });\n    return;\n  }\n\n  await fetchImages({ isLoadMore: false }); // call the search function (initial query)\n  form.reset(); // Clears the input field after searching\n});\n\n// Handler for clicking on the \"Load more\" button\nloadMoreBtn.addEventListener('click', async () => {\n  currentPage += 1; // increase the page by 1\n  await fetchImages({ isLoadMore: true }); // call the search function (next portion)\n});\n\n// The main function for retrieving images from the API\nasync function fetchImages({ isLoadMore }) {\n  if (isLoadMore) {\n    showMoreLoader(); // show the indicator under the button (only on additional request)\n  } else {\n    showLoader(); // show the global indicator (only on the first request)\n  }\n\n  // Make a GET request to Pixabay API with the required parameters\n  try {\n    const data = await getImagesByQuery(currentQuery, currentPage); // make a request to the API\n    totalHits = data.totalHits; // store the total number of results\n\n    if (data.hits.length === 0) {\n      // If no images are found, display a warning\n      iziToast.warning({\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n      });\n      return;\n    }\n    createGallery(data.hits); // add images to the gallery\n    if (currentPage * 15 >= totalHits) {\n      hideLoadMoreButton(); // if you've reached the end — hide the button\n      iziToast.info({\n        message: \"We're sorry, but you've reached the end of search results.\",\n      });\n    } else {\n      showLoadMoreButton(); // if there are more images — show the button\n    }\n    smoothScroll(); // smoothly scroll the page to new results\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    // In case of an error, display an error message\n    iziToast.error({\n      message: 'Something went wrong. Please try again later.',\n    });\n  } finally {\n    if (isLoadMore) {\n      hideMoreLoader(); // Hide the moreloading indicator regardless of the result\n    } else {\n      hideLoader(); // Hide the loading indicator regardless of the result\n    }\n  }\n}\n// Smooth scrolling function to new items\nfunction smoothScroll() {\n  const card = document.querySelector('.gallery-item'); //look for the first gallery card\n  if (!card) return; //if not found, stop executing the function\n\n  const cardHeight = card.getBoundingClientRect().height; //get the height of the card\n  //slowly scroll to double the height of the card\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n// \"Load more\" button animation when moving the mouse\n// Determine the cursor position relative to the button and pass it to CSS via custom properties\ndocument.querySelector('.gallery-button').onmousemove = e => {\n  const x = e.pageX - e.target.offsetLeft; // X coordinate inside the button\n  const y = e.pageY - e.target.offsetTop; // Y coordinate inside the button\n\n  e.target.style.setProperty('--x', `${x}px`); // pass the coordinates as variables for styles\n  e.target.style.setProperty('--y', `${y}px`);\n};\n"],"names":["API_KEY","BASE_URL","PER_PAGE","getImagesByQuery","query","page","params","response","gallery","loader","loadermore","lightbox","SimpleLightbox","createGallery","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","hideLoader","showMoreLoader","hideMoreLoader","showLoadMoreButton","hideLoadMoreButton","loadMoreBtn","form","currentQuery","currentPage","totalHits","event","iziToast","fetchImages","isLoadMore","data","smoothScroll","error","card","cardHeight","x","y"],"mappings":"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"}